config:
  oidc:
    caFile: "/etc/dex-tls-cert/tls.crt"
connector:
  http:
    client:
      skipSSLValidation: true
dex:
  telemetry:
    enabled: false
gateway:
  gateway:
    auditlog:
      authMode: "oauth-mtls"
      enabled: true
global:
  auditlog:
    skipSSLValidation: true
  adminPassword: ""
  connector:
    caCertificate: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNwakNDQVk0Q0NRRDRIRW9Od21MSjhqQU5CZ2txaGtpRzl3MEJBUXNGQURBVU1SSXdFQVlEVlFRRERBbHMKYjJOaGJHaHZjM1F3SUJjTk1qSXdNakEzTVRVd056VTRXaGdQTWpFeU1qQXhNVFF4TlRBM05UaGFNQlF4RWpBUQpCZ05WQkFNTUNXeHZZMkZzYUc5emREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCCkFMRzllWEYxd2xMd2hmSEFyOTkyLzhYZnJKcDVrZUdmK24zMTF0Q2haYVR1VFpKdG1lanVDQ2ltYU9jS3Y4QnQKdGZMbFY1WGorV252NU9GblRJeHRPNFIzTEJyT1BpSDJWaCsvdzlGenhyQ1IxOVpjOTRuQnU3dUtxb2xqa3lPNgpmclM5ZC9iaTIwdkVUcVZWeXU1Y0pQaFZoRVBmYUplOWZnUEZOZ2FrL0ZyNFpVeGhXbFgzRlNCL0N5VWJkVVhiCjlzblhUL2N4b0N5WEJKMlB4ZnRtOEluRVdKangvZW0wZ2pxajVVc1AzZVBreHRjd1ZrUXp6ekFmdDlaZzlVRXoKdU8wVUU3U3NIbVdsTFo0MVlaS1V4RXhmUnJ0eW0yZW5UcENCS2lHZFVsR1Zya1ZaMGFnYlJxNWNzRnVVemUvaApkZ2lKd1RVNVZLajVMS2ZPUlZGRXFrMENBd0VBQVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVdJb2pnUEhVCnZ1YkF0RWF3ajErY1Blcm8wdkVaRlJvNmFVK05idjJ2Y2J3M1RmczY0QlJabTQwOE05cysyRzNDSFdaRE9TdlgKY0hWdXo4eC9XSXZVZU53WmJNRVF4TVZHVVl1K1FrVnU4bnI1Z1daRkIranphbHhHVUxyNXRnbWpNYVQ2Zk9LcQp5MzNMUXFXZDhadFA2R3ZJS01SblhnelBtaEJ5MVhvVDZJZXVZVzFhRWI5Q3ZCNlRjOGlUK0lDaWlKL0pPWjFnClhOU1pWaUxnbGlkQnJlUm5ZZGtvalZxZzdDaTlKSGFIY2hITDBnS0xxeUdodFAycTlBMDVscXVzd1lNNm14dUwKM1dHaFRUK3kxSWRQMnQyUmRQc2xiRURvaGhMTHpTYkdEckR2VnMxc05NbjJJbmpmS2cvaVdCUlkrL3FCdU4xcwpBK2xXZkhDZjh4d2pUZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
    caKey: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBc2IxNWNYWENVdkNGOGNDdjMzYi94ZCtzbW5tUjRaLzZmZlhXMEtGbHBPNU5rbTJaCjZPNElLS1pvNXdxL3dHMjE4dVZYbGVQNWFlL2s0V2RNakcwN2hIY3NHczQrSWZaV0g3L0QwWFBHc0pIWDFsejMKaWNHN3U0cXFpV09USTdwK3RMMTM5dUxiUzhST3BWWEs3bHdrK0ZXRVE5OW9sNzErQThVMkJxVDhXdmhsVEdGYQpWZmNWSUg4TEpSdDFSZHYyeWRkUDl6R2dMSmNFblkvRisyYndpY1JZbVBIOTZiU0NPcVBsU3cvZDQrVEcxekJXClJEUFBNQiszMW1EMVFUTzQ3UlFUdEt3ZVphVXRualZoa3BURVRGOUd1M0tiWjZkT2tJRXFJWjFTVVpXdVJWblIKcUJ0R3JseXdXNVRONytGMkNJbkJOVGxVcVBrc3A4NUZVVVNxVFFJREFRQUJBb0lCQUVoV3RrT2dTdHVZdXRzZQpzalcvNSs5dnpuNzhkWXdmb1VKOHVOWW1xZ2pMV0ZUOU9JUGR4UUpPWUNtUWJXUnpBbmQrTWZ4MlVYOTFQSEVrCnFyb0lodzJ0dHd5ZDNoblNlVkRvcWxqbnh2ajhFcDFUTHdncENqQVZDcjFxQW11ckxvQi9FSUV4NlZEWDc2NUkKMFpQYmVzeDdlWjVxSWRhSUwrNTI2RHNpRVBjd3JjQXZjYnhaYmFCZmRUdVpoWHlpUjJRK3ErYkJNKzhla2NrNQpJc0ZHWVJMRk5oTDZXSHM3Q1Fzck5JMVQ1UERCR1hDUWsrMC9laWFIdnRPeWZaS2NNVy94Q0VpUkEzbWZzRHJGCm95WnFrMXFaTXZGdU1iRHNKajdDN2dSN2w3UlJHbm9BTGdmdmNHMlJSY1ArQWsrMU5BL096K0hCZ1RrSjh6WG8KMGJCTTZRRUNnWUVBM1haV1dyODEzT0RtYzdPemFtT096WUNSSVBkNnRUMTkrYkVtanByVnI3OVlkZUp5OExXTgpNSGU2Tlp3REtLWk1FTURaUHNINi9Jczl2TCtoa3pSd0NYRUhWa2dVczVYSWNvSERiWktVTXlZZGQ4cC9ESi8yCndybFNKRi9XOHV3YzVGcUY3SHdvZm1kYSt5ekhVSExDK2hwblFrR0g5dGtTV1VuTVdRMW9mTUVDZ1lFQXpYV1QKQy8yNkpYeWVHRWhBOWJOSTBESDE3NFpxNHpiZFgrSnVISUplaVE5alRvV3lqR3p5ckZvd2tXK3VZM3NqQU1MQQo1SE5TaW5nWnpEZ01jenFUbWJjMG9yQlVUMEF6dFBSZHg0cjRZZUVGL1h2dlJxYnNyeGdHTWliclhyd3BDSjVDCnFZVk82RWtqNXJiUWJKY0NQL1EyR1BFZ1pLR0JMdk0wSzd2UTlJMENnWUJ0aWpyc1orZWNlU0dEMlQ3RlFMbEIKckhZY2VFeVptUERXc0drQjRGUVJ1Zk5uVzdxK2xRNWhDdGR2N05zaklCNC9xeVBKaHVrK1FTRW9XeUR3VHQrYgp5K3gxSVBJY1lkbmp5WXVBaHlBR3JMT21yT0pxdkRTeDNEaGxCWUtzWlYxbEZlRm9ONEZRQkk5Yjdhb29nSnN3CldoNzVCckRaeUVUckpUV09Wck40QVFLQmdBeDZNMi9xL0w4Q0RtZlRHMzdRWUgra1NSYyt4b2I5OGZ1OHVJc3EKcjZzTE1EQzRsZHRKVW9OOUJxNE9aanpNWVpmT1BBQ2pzRU9RZjZDVFZzNDRwSFlWVmpEN0hHT2p0b0FxeHZjegpUVnBFWENURXZnZEFZK2RPUWpJUmd3SEIwNHdlY0ZYekxwT1V2WVZwWE1iN2RMdUZqVE4ra1VVTE9ka3NFK01FCkNQQ1JBb0dBQXEzUUptNUhzVzV1VEhSanlzRGM3UmdWZ2RhUTdRdTJHYVVkZEU0ZnJSMXB6SE1JRHhzclpaeWwKZ2lvcUNwUDd3VFV0Wmo0ZXQ3QmpGWU5nUUkvSEp6L3htNmJXYXRhSFBCR3grc2tQN3NLaG5ab3lsbzdDeThCLwp1cWRtT2FIaW9YSGdQc2lCcks0dlZKZnJ4aTlSbGhkWjJyeFpKNWJxYWdIcmdzdE1LUzg9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
  domainName: "local.kyma.dev"
  externalCertConfiguration:
    secrets:
      externalCertSvcSecret:
        manage: true
  externalServicesMock:
    auditlog:
      applyMockConfiguration: true
    enabled: true
    oauthSecret:
      manage: true
  http:
    client:
      skipSSLValidation: true
  ingress:
    domainName: "local.kyma.dev"
    tlsCrt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZSVENDQXkyZ0F3SUJBZ0lVSElnSzhaaXFoeUIxazZaTzFyNGg2ZWV1aUdvd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0d6RVpNQmNHQTFVRUF3d1FLaTVzYjJOaGJDNXJlVzFoTG1SbGRqQWVGdzB5TWpBek1EUXhOVFV5TVRsYQpGdzB6TWpBek1ERXhOVFV5TVRsYU1Cc3hHVEFYQmdOVkJBTU1FQ291Ykc5allXd3VhM2x0WVM1a1pYWXdnZ0lpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQ0R3QXdnZ0lLQW9JQ0FRRExVUDVQQ3BNVHNUZ2E4Y3lPYjlnWXJvTFkKTFhvZ3Z1RlJZRy9SSGlMcmdFeUlXaDQ0U2szdHhDZkFscnZMNmE5REVpYnF5Tmk4Yk9DM1ZVZGdkL2xDcjV3WgozakRvNjgzNXhXV05jRnRVMFJJVTgyNUFHbHoxQXcrYkFpMVp5Z0xJTDVNY0g0QzRPL01qbjJqSWZlNXNzNmo1CmlGZTNkNVVpdGJENURNeVA5dkN5WFR0MjR3NmZJRVZ4ZEhlTUJ5Rk5Ld053UmkyS2ZwK0xSR3dKclFIa01Wd1IKaTAzOFNyV0hack1pTExZZXA2SXRTZ1BuaSsxWjJZb20yYzlGNTNJSVJzQVRxOCtRUlZIV3V2NmM5eGRLS3ZubApGYmFvR2NxcGxqV3YwSUR3SzF4ZmJiaU15SzkrbjZoOHhZRTJXNUppNitqU3VKdUhTN1RIL3lzNCtueE5VWHFkCklrSjlWcFBsbDcvZ21RWFVhbE84c2JrV0R5ejloUllsbTBjQkdvNVl3VExmRGI4VzRlT2tWSGtUamI0VDVwRHMKSnVhVjhnTGpRZmVGaHBvUlVZVjUxUjFldkNxVWtsUHNlVDMwcmhlNGg2MjU0S2VmbjJoY1hvUHRmN2h6a0MzdwphVlhTcHgzMnJHbFlRS3dBWCtBdFJxUlJUSWFLeUJ4K2xhUWNlYzhaKzRPN2RnUUNnOTVWc0dBVmdyaDNLbjZLCnVkYlhwQ3lkRmU0eU1BK2tZVSsvazhVWERCMnhmTVlnaC9yeWcvOW9XeWJBbFFVOXFpUkRnbUNZZTMyUThhcFIKdHF3dktBSXFCQ1MvRXhIY2dHeEVKMUdmOC9JY3RpU3M0WkFzamxCUzBFN0k0OGgzemM5WHJQRE5sMGZocmJhSgpyOCtrMmE1UGVPWnVkQzE3MHdJREFRQUJvNEdBTUg0d0hRWURWUjBPQkJZRUZCMndFREpSN2FGeXZrR04rUVh6CmhQdnd5b05tTUI4R0ExVWRJd1FZTUJhQUZCMndFREpSN2FGeXZrR04rUVh6aFB2d3lvTm1NQThHQTFVZEV3RUIKL3dRRk1BTUJBZjh3S3dZRFZSMFJCQ1F3SW9JT2JHOWpZV3d1YTNsdFlTNWtaWGFDRUNvdWJHOWpZV3d1YTNsdApZUzVrWlhZd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFIZldDWDdqeG5CMW9SbmpVOVR3eTJwRnkvVVFuaGlmCndMc2toNFdTOWNFNnRUalVtdHNwL0JLVjNwQnhYMW5xanhEdTlabDUwcmVtN3hmWURyYXdIaUFnV0owaWk0VHIKbXhUN2NCZE1uMmJjUkZ3eE5naE9YTGhiMFdNWTB2Mkp2RnA4TEpXcXJPOUZKOE50ZEFPd0JDOGlGclJuSWtBZwo3cFVQYWJMWTcrMFhMbVhFVHhIcVpPV3kyei9YeUNsZ2V3WS9pZlNabzFGZjl2MmloWmVlaTkzRHNDUEpkVW91Cml2clJpUXRSc2dieDE5dFVOTko5dmYwbVZFdUdnczRNSEFQQzFkWE5VVDU5NG5USEpRZWQvaGR1bmJ1Wkc4OFUKSjcxV2E4Q0dRV29RYmRVeUwwWWduemtKRndYNDhaejZrQm55WlZ3enBsaDRlS0t1b0RRWitodGYrakIvQlJmMwp3eXR5UFRkWHczancvNVZRNUx6SU1Xc21EdTlEcjhqOE1CSDNmWk9JdFdNSGZGa3E1dXB6L0xNRkNpMlhOVElXCm11SWZWMUxIR2dyQ1ZQN2hsbXpYVUdJN3ZabEpOZFBLV3FyZmRMQ1EvYlBpeXNZdDlXTDk4NFBEMEdtZmdnTFMKTHRHcDVIVGxaajV2dVNEVW5IQ3kvVk4wbTE3dUJFSmRvTXlLZHFQTmlCSEZBamVwRDA2NWZrK3ovOW9XMWIzUgpMOVNvY284L2x4Rk9tc0g2UDBLY3htdWRPdkdaSFVEWENXTVo1NEdTUEJ5MTN1NWdJQ2tKRTFyeVYzSHJPRWp2CnZCRm5IV3Zldk0xd3BkZFJrQXJnNkNNWmJkbW1sU1NPYnhrd3g3NmZlbE5GNEJadXNtRDF0NytWTHhHdytaRGYKdmZucDlLS0QxQm00Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
    tlsKey: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRd0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1Mwd2dna3BBZ0VBQW9JQ0FRRExVUDVQQ3BNVHNUZ2EKOGN5T2I5Z1lyb0xZTFhvZ3Z1RlJZRy9SSGlMcmdFeUlXaDQ0U2szdHhDZkFscnZMNmE5REVpYnF5Tmk4Yk9DMwpWVWRnZC9sQ3I1d1ozakRvNjgzNXhXV05jRnRVMFJJVTgyNUFHbHoxQXcrYkFpMVp5Z0xJTDVNY0g0QzRPL01qCm4yaklmZTVzczZqNWlGZTNkNVVpdGJENURNeVA5dkN5WFR0MjR3NmZJRVZ4ZEhlTUJ5Rk5Ld053UmkyS2ZwK0wKUkd3SnJRSGtNVndSaTAzOFNyV0hack1pTExZZXA2SXRTZ1BuaSsxWjJZb20yYzlGNTNJSVJzQVRxOCtRUlZIVwp1djZjOXhkS0t2bmxGYmFvR2NxcGxqV3YwSUR3SzF4ZmJiaU15SzkrbjZoOHhZRTJXNUppNitqU3VKdUhTN1RICi95czQrbnhOVVhxZElrSjlWcFBsbDcvZ21RWFVhbE84c2JrV0R5ejloUllsbTBjQkdvNVl3VExmRGI4VzRlT2sKVkhrVGpiNFQ1cERzSnVhVjhnTGpRZmVGaHBvUlVZVjUxUjFldkNxVWtsUHNlVDMwcmhlNGg2MjU0S2VmbjJoYwpYb1B0ZjdoemtDM3dhVlhTcHgzMnJHbFlRS3dBWCtBdFJxUlJUSWFLeUJ4K2xhUWNlYzhaKzRPN2RnUUNnOTVWCnNHQVZncmgzS242S3VkYlhwQ3lkRmU0eU1BK2tZVSsvazhVWERCMnhmTVlnaC9yeWcvOW9XeWJBbFFVOXFpUkQKZ21DWWUzMlE4YXBSdHF3dktBSXFCQ1MvRXhIY2dHeEVKMUdmOC9JY3RpU3M0WkFzamxCUzBFN0k0OGgzemM5WApyUERObDBmaHJiYUpyOCtrMmE1UGVPWnVkQzE3MHdJREFRQUJBb0lDQUFxcFgvZEJIMTZrVW03Y25kVEhwS3RXCnEySFpXMUxRUlB5QmRCdWhNRVR0TmhZekNPdjhGQzRUQ29xYzNPZzFMdUx6Z1dXYWRxaHdMOXN0UzZXUlpRUWgKaXF3SWwyNnFGRGtKZlpQTWY5MlRhOEZSZi9IalJWdEx6U0VISE4yeWdZYlhNbjJ0QytaSUE5aXJDVkdmZzVzMgpVMHdTakVHclhGUzA5bWQ0OWxrdVRUSkNsVld4L20yZ2JFUFF6d2EyeGxaSG1ueU92RFgyVnpqSnM3MzdlK0tTCjBXTW5kNXJIOHREN2lsL21adjUxM1VQeFlsY0lEV3J0YjIzWXlpSm85VXFJZTBDM2ZSWkhBYUw0VjFXMUxMRjYKVGg4UjQ4R0RrMlJsT01JcGRZN05RZlloeU5CZWVHVjBJSXBsSGxZb0RkQncwb1Zmb2poQlkyVFd5cXR5NXpCYwpKOXUyR2pUQnpGKzc2R1hoUm9jTW9TeVhJV29SZWkvU1orWFJGM3pjdFl5d3FMNVFDMzhLNUkzNGJ0d3Uzd3UxCkp3NlNKZFhFZ0ZqVVJqRDQzVkl3YkYvSHcrdWxRSFFjOVVNZE8wcHFuaVpQRGFSK054SkhGZTQwdWx6TVVBcFEKU3RGbEtoQkhVZStQaU42MWFOM2ZZZjdlT0tPVXN1UDFDVGZ2RkZSdlU1dTlIVm40QzlrMUp2bWVhN3Q1RWFabApRSlpCQzFQMlJDTVNNM0hodzByTVE0MHVOeWVkVDVIV1Z5ODZobVdPa0JVM3U2dTJFdG1TQmdtY2o1VW5lZDNmCjJaekNacmNQaGxqQ3YxQXN2Vzk4MEs2bHVGakQybW1icXBHM211R0NnNDB5cy9rSVFoNnZaK3VqSHdJVzVQOGQKMUswQWJkRlJ5OTFIMzhqeGVrVmhBb0lCQVFEYk9OS3pZV2c5ZE5rbTEzalAwSkRWR3A5UUU3ZTlwYXF1T2pLcApkT3A4SXFXelVSQms0VUNJWHBTMzdiUE5GaUkrMzJKd3UzYzd0a2VPSlFXL1B0dUt0V1VubU9GMFFlZWxGVmhrCmNJVXZGUkFmbWxvOHQySnRsUmp0RnBjdW5sNDdQb0lOdWR2eUhhNTluRWEzMFVqZ2t1d21TWWV5OGdPbVVLdGYKMjl3eFlCUVA2M0tqaGJ5MDc1eGo2K0RnSG4rOVM0d1VNc1ZyNzlQSUFPcmkwK1hHckt4WWxCOUc5T3dnTGZzSgp0eGw3cjlqSXY1aGpwKy84cDhPTTlDd3JPYzB6SyswcGhZVkR5REN2Ni9ZRllBMElCSE5uVE5ENHN2aG9STCtpCmhwOG9vR25QYWNnS0Jzd01UZHBDUHo2VGFJT3NnL2NrR0ljU3N0d3NIaEVyTWN6NUFvSUJBUUR0YlE0UzNVczYKVDBFUGFoVzRzTDdhZTU1Z2RDbzFNLzdySkR6MjQxK25vSHZROE81VmdESWtuSlhlb1dDZDVzVmtpNUYzM1NqRQpwSUh1bUE0Z1lESnJNbVM0WGFZcDIxMDNQRW5tdkswdWF6azU4ZFk5aFc2bEVtS1VzWUc0THpFcW83alpsckVICmtoRytvckNnUnE2OUNpVHo1VUY2NTQraEl6UjVEWGJpclJHdmhoUGhHMmVOZDJHK0UyelhRZHZscHZCc0JDT1UKMk5IRmE5dG1FMVFxT3E0d2ZVSlRXVFFwT0Frb29PZlBPbDlFRW1EVEtwT3ZBVjV4WXZXTHlBSmpHMSs3dU5ySwpETUwzOG5KeEMyNUVHYkNXK1l5U0J4RElJQzhJa0poM2lSamJkbTNXbDMwUGh1eXRsb0M0VzNmUThXZk9HWnlqCmxkMHlGZExXT2Y0ckFvSUJBUURBREE2aHNQTEY3QWlVZTIxTitUUDRUTU5HUG8vWDV6c1lPTW5MSkM2TG96cXcKVlpMY0hXMFFTbk5Va2p2U3JkSkFiQ2ZzQkg3VzQ3L1o2ZHNZQ0hRQ0Z4bFAwQ0dxWEZZWGpCU01vUG84SGVLcgpIT2h5aW1FRENQdjJMN1V2MVBOT1NWdGJ0UGZYS21PRGpSVnkwVGhiN0xwT2JGb2h6TnlmcGNvTVJ5cW1Zcm9RCm5ENG92Tzl0UHdBdGxTWENrVlZzdXJNenVxcXkvVDMxMTcvdUNKNGlKNEV3ZEVyV09aaG1OSUhZcC92K0hEWDQKMzhnYmZiTEREeUZENldDTVdhM0haM0x6emhIS0tLVm1hSHQxaUFqQ2ZrdXZNbDlia0VZSDZqcExvazNxSkdXdAptOGp2NTdaNERQZm8wMGo1a0RUU1BDV1ZESnZBS01xekozLzQ3RDdaQW9JQkFBbEJsaW5nSEwyeU4wd2RpNmsrCm9zSXJ6Wm5mRFlJemU3MjVGUE5mRyt5U0VpR3NNdTU4Wi9nTGJzQldORWtUcFNCdFhJZDZ4TXNkeXI3OWlKZDAKaUtLclBVZit4cXFkRmI1QWlIVUphQXNHUFIzb01yMEZSYklEekhvVmpZUWJ1dVA1ckF3M2xzRS96WmRNQ216RgpOS3pFQjNyR3RrM1BWMGNsOHpiQThxQ1Z0TG5PRlZwU1VqQXV0azNOdmhHS1RNTmdSY0ZBVEE3U2dTTWNPRnA3CmFHMlpDZzl6NHJFVEtqaHRLZFkrcDZycGtLczd1RENqV1V5YVZnOC9sMmtTckIwbkJRMXhnSDRlRHovUllPck4KVWtndlpEWU9sbzllM1NXZ001VTI1ZXJMR24vNzF2NWx1NGR1Y0MyNFQxNWdtb1EzMVI4dzJtMTZPenhubzJlYwpyUzhDZ2dFQkFKbWtWQWJiWjk2aGJiakJ6N3BQd0V5M0hqbFZET2pMUjVDRlZHUDYveGJDSGdVbWRndmlTS1IxClE4RE9nZ2Nzd3ZOYk5rT2Z3YjVkMjFxYU84ZXR4ZmptMEpUcmhrOGtFSncyc0cvSmdpc01xT0owUklsQnk1bkQKT3phSmVUZGptajVvUTQzeURMa3R1WDh1cDVudGtvMkhXL2dVOHUyMDgwNHc2OWJCV2NiYndLSVp5cTd3QmNQbgoxUHFzL29YWSsybFhoNitsK0ZOTzE4M0NZVEFLSS9YMlFhMTBpNlk5MFVIRC9Ec0RaQktUNjkycmRaYXUzY2EvCngzdEhIcm8vcFRyUzJkNXMvRHlIenlueEdPQTdnMnhBRUhOLzF3VmprTDRlcE1LSmFIR3NLd3RDbmVRWUdjVDYKMjVDZUJYVFVYVkVLVk01U3dxOW4xQ0FMdWVBUFlyRT0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQo="
  isLocalEnv: true
  oathkeeper:
    mutators:
      authenticationMappingServices:
        subscriber:
          authenticator:
            enabled: true
        tenant-fetcher:
          authenticator:
            enabled: true
  ordAggregator:
    http:
      client:
        skipSSLValidation: true
  systemFetcher:
    enabled: true
    http:
      client:
        skipSSLValidation: true
    systemToTemplateMappings: '[{"Name": "temp1", "SourceKey": ["prop"], "SourceValue": ["val1"] }, {"Name": "temp2", "SourceKey": ["prop"], "SourceValue": ["val2"] }]'
    systemsAPIEndpoint: http://compass-external-services-mock.compass-system.svc.cluster.local:8080/systemfetcher/systems
    systemsAPIFilterCriteria: "no"
    systemsAPIFilterTenantCriteriaPattern: "tenant=%s"
  tenantFetchers:
    account-fetcher:
      accountRegion: "local"
      dbPool:
        maxIdleConnections: "1"
        maxOpenConnections: "1"
      enabled: true
      endpoints:
        accountCreated: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/tenant-fetcher/global-account-create"
        accountDeleted: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/tenant-fetcher/global-account-delete"
        accountUpdated: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/tenant-fetcher/global-account-update"
      fieldMapping:
        customerIdField: "customerId"
        detailsField: "eventData"
        discriminatorField: ""
        discriminatorValue: ""
        entityTypeField: "type"
        idField: "guid"
        nameField: "displayName"
        tenantEventsField: "events"
        totalPagesField: "totalPages"
        totalResultsField: "totalResults"
      kubernetes:
        configMapNamespace: "compass-system"
        pollInterval: "2s"
        pollTimeout: "1m"
        timeout: "2m"
      manageSecrets: true
      oauth:
        client: "client_id"
        secret: "client_secret"
        tokenPath: "/secured/oauth/token"
        tokenURL: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080"
      providerName: "external-svc-mock"
      query:
        pageSize: "1000"
        startPage: "1"
      queryMapping:
        pageNumField: "page"
        pageSizeField: "resultsPerPage"
        timestampField: "ts"
      schedule: "0 23 * * *"
      secret:
        clientIdKey: "client-id"
        clientSecretKey: "client-secret"
        name: "compass-account-fetcher-secret"
        oauthMode: "standard"
        oauthUrlKey: "url"
      shouldSyncSubaccounts: false
    subaccount-fetcher:
      accountRegion: "local"
      dbPool:
        maxIdleConnections: "1"
        maxOpenConnections: "1"
      enabled: true
      endpoints:
        subaccountCreated: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/tenant-fetcher/subaccount-create"
        subaccountDeleted: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/tenant-fetcher/subaccount-delete"
        subaccountMoved: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/tenant-fetcher/subaccount-move"
        subaccountUpdated: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/tenant-fetcher/subaccount-update"
      fieldMapping:
        customerIdField: "customerId"
        detailsField: "eventData"
        discriminatorField: ""
        discriminatorValue: ""
        entityTypeField: "type"
        idField: "guid"
        nameField: "displayName"
        tenantEventsField: "events"
        totalPagesField: "totalPages"
        totalResultsField: "totalResults"
      kubernetes:
        configMapNamespace: "compass-system"
        pollInterval: "2s"
        pollTimeout: "1m"
        timeout: "2m"
      manageSecrets: true
      oauth:
        client: "client_id"
        secret: "client_secret"
        tokenPath: "/cert/token"
        tokenURL: '{{ printf "https://%s.%s" .Values.global.externalServicesMock.certSecuredHost .Values.global.ingress.domainName }}'
      providerName: "subaccount-fetcher"
      query:
        pageSize: "1000"
        startPage: "1"
      queryMapping:
        pageNumField: "page"
        pageSizeField: "resultsPerPage"
        timestampField: "ts"
      schedule: "0 23 * * *"
      secret:
        clientCertKey: "client-cert"
        clientIdKey: "client-id"
        clientKeyKey: "client-key"
        clientSecretKey: "client-secret"
        name: "compass-subaccount-fetcher-secret"
        oauthMode: "oauth-mtls"
        oauthUrlKey: "url"
        skipSSLValidation: true
      shouldSyncSubaccounts: true
      subaccountRegions: "test"
  tests:
    basicCredentials:
      manage: true
    http:
      client:
        skipSSLValidation:
          director: true
          ordService: true
    ordService:
      subscriptionOauthSecret:
        manage: true
operations-controller:
  http:
    client:
      skipSSLValidation: true
system-broker:
  http:
    client:
      skipSSLValidation: true