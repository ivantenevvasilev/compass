config:
  oidc:
    caFile: "/etc/dex-tls-cert/tls.crt"
connector:
  http:
    client:
      skipSSLValidation: true
dex:
  telemetry:
    enabled: false
gateway:
  gateway:
    auditlog:
      authMode: oauth
      enabled: true
global:
  adminPassword: ""
  connector:
    caCertificate: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNwakNDQVk0Q0NRRDRIRW9Od21MSjhqQU5CZ2txaGtpRzl3MEJBUXNGQURBVU1SSXdFQVlEVlFRRERBbHMKYjJOaGJHaHZjM1F3SUJjTk1qSXdNakEzTVRVd056VTRXaGdQTWpFeU1qQXhNVFF4TlRBM05UaGFNQlF4RWpBUQpCZ05WQkFNTUNXeHZZMkZzYUc5emREQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCCkFMRzllWEYxd2xMd2hmSEFyOTkyLzhYZnJKcDVrZUdmK24zMTF0Q2haYVR1VFpKdG1lanVDQ2ltYU9jS3Y4QnQKdGZMbFY1WGorV252NU9GblRJeHRPNFIzTEJyT1BpSDJWaCsvdzlGenhyQ1IxOVpjOTRuQnU3dUtxb2xqa3lPNgpmclM5ZC9iaTIwdkVUcVZWeXU1Y0pQaFZoRVBmYUplOWZnUEZOZ2FrL0ZyNFpVeGhXbFgzRlNCL0N5VWJkVVhiCjlzblhUL2N4b0N5WEJKMlB4ZnRtOEluRVdKangvZW0wZ2pxajVVc1AzZVBreHRjd1ZrUXp6ekFmdDlaZzlVRXoKdU8wVUU3U3NIbVdsTFo0MVlaS1V4RXhmUnJ0eW0yZW5UcENCS2lHZFVsR1Zya1ZaMGFnYlJxNWNzRnVVemUvaApkZ2lKd1RVNVZLajVMS2ZPUlZGRXFrMENBd0VBQVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVdJb2pnUEhVCnZ1YkF0RWF3ajErY1Blcm8wdkVaRlJvNmFVK05idjJ2Y2J3M1RmczY0QlJabTQwOE05cysyRzNDSFdaRE9TdlgKY0hWdXo4eC9XSXZVZU53WmJNRVF4TVZHVVl1K1FrVnU4bnI1Z1daRkIranphbHhHVUxyNXRnbWpNYVQ2Zk9LcQp5MzNMUXFXZDhadFA2R3ZJS01SblhnelBtaEJ5MVhvVDZJZXVZVzFhRWI5Q3ZCNlRjOGlUK0lDaWlKL0pPWjFnClhOU1pWaUxnbGlkQnJlUm5ZZGtvalZxZzdDaTlKSGFIY2hITDBnS0xxeUdodFAycTlBMDVscXVzd1lNNm14dUwKM1dHaFRUK3kxSWRQMnQyUmRQc2xiRURvaGhMTHpTYkdEckR2VnMxc05NbjJJbmpmS2cvaVdCUlkrL3FCdU4xcwpBK2xXZkhDZjh4d2pUZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
    caKey: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBc2IxNWNYWENVdkNGOGNDdjMzYi94ZCtzbW5tUjRaLzZmZlhXMEtGbHBPNU5rbTJaCjZPNElLS1pvNXdxL3dHMjE4dVZYbGVQNWFlL2s0V2RNakcwN2hIY3NHczQrSWZaV0g3L0QwWFBHc0pIWDFsejMKaWNHN3U0cXFpV09USTdwK3RMMTM5dUxiUzhST3BWWEs3bHdrK0ZXRVE5OW9sNzErQThVMkJxVDhXdmhsVEdGYQpWZmNWSUg4TEpSdDFSZHYyeWRkUDl6R2dMSmNFblkvRisyYndpY1JZbVBIOTZiU0NPcVBsU3cvZDQrVEcxekJXClJEUFBNQiszMW1EMVFUTzQ3UlFUdEt3ZVphVXRualZoa3BURVRGOUd1M0tiWjZkT2tJRXFJWjFTVVpXdVJWblIKcUJ0R3JseXdXNVRONytGMkNJbkJOVGxVcVBrc3A4NUZVVVNxVFFJREFRQUJBb0lCQUVoV3RrT2dTdHVZdXRzZQpzalcvNSs5dnpuNzhkWXdmb1VKOHVOWW1xZ2pMV0ZUOU9JUGR4UUpPWUNtUWJXUnpBbmQrTWZ4MlVYOTFQSEVrCnFyb0lodzJ0dHd5ZDNoblNlVkRvcWxqbnh2ajhFcDFUTHdncENqQVZDcjFxQW11ckxvQi9FSUV4NlZEWDc2NUkKMFpQYmVzeDdlWjVxSWRhSUwrNTI2RHNpRVBjd3JjQXZjYnhaYmFCZmRUdVpoWHlpUjJRK3ErYkJNKzhla2NrNQpJc0ZHWVJMRk5oTDZXSHM3Q1Fzck5JMVQ1UERCR1hDUWsrMC9laWFIdnRPeWZaS2NNVy94Q0VpUkEzbWZzRHJGCm95WnFrMXFaTXZGdU1iRHNKajdDN2dSN2w3UlJHbm9BTGdmdmNHMlJSY1ArQWsrMU5BL096K0hCZ1RrSjh6WG8KMGJCTTZRRUNnWUVBM1haV1dyODEzT0RtYzdPemFtT096WUNSSVBkNnRUMTkrYkVtanByVnI3OVlkZUp5OExXTgpNSGU2Tlp3REtLWk1FTURaUHNINi9Jczl2TCtoa3pSd0NYRUhWa2dVczVYSWNvSERiWktVTXlZZGQ4cC9ESi8yCndybFNKRi9XOHV3YzVGcUY3SHdvZm1kYSt5ekhVSExDK2hwblFrR0g5dGtTV1VuTVdRMW9mTUVDZ1lFQXpYV1QKQy8yNkpYeWVHRWhBOWJOSTBESDE3NFpxNHpiZFgrSnVISUplaVE5alRvV3lqR3p5ckZvd2tXK3VZM3NqQU1MQQo1SE5TaW5nWnpEZ01jenFUbWJjMG9yQlVUMEF6dFBSZHg0cjRZZUVGL1h2dlJxYnNyeGdHTWliclhyd3BDSjVDCnFZVk82RWtqNXJiUWJKY0NQL1EyR1BFZ1pLR0JMdk0wSzd2UTlJMENnWUJ0aWpyc1orZWNlU0dEMlQ3RlFMbEIKckhZY2VFeVptUERXc0drQjRGUVJ1Zk5uVzdxK2xRNWhDdGR2N05zaklCNC9xeVBKaHVrK1FTRW9XeUR3VHQrYgp5K3gxSVBJY1lkbmp5WXVBaHlBR3JMT21yT0pxdkRTeDNEaGxCWUtzWlYxbEZlRm9ONEZRQkk5Yjdhb29nSnN3CldoNzVCckRaeUVUckpUV09Wck40QVFLQmdBeDZNMi9xL0w4Q0RtZlRHMzdRWUgra1NSYyt4b2I5OGZ1OHVJc3EKcjZzTE1EQzRsZHRKVW9OOUJxNE9aanpNWVpmT1BBQ2pzRU9RZjZDVFZzNDRwSFlWVmpEN0hHT2p0b0FxeHZjegpUVnBFWENURXZnZEFZK2RPUWpJUmd3SEIwNHdlY0ZYekxwT1V2WVZwWE1iN2RMdUZqVE4ra1VVTE9ka3NFK01FCkNQQ1JBb0dBQXEzUUptNUhzVzV1VEhSanlzRGM3UmdWZ2RhUTdRdTJHYVVkZEU0ZnJSMXB6SE1JRHhzclpaeWwKZ2lvcUNwUDd3VFV0Wmo0ZXQ3QmpGWU5nUUkvSEp6L3htNmJXYXRhSFBCR3grc2tQN3NLaG5ab3lsbzdDeThCLwp1cWRtT2FIaW9YSGdQc2lCcks0dlZKZnJ4aTlSbGhkWjJyeFpKNWJxYWdIcmdzdE1LUzg9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
  domainName: "local.kyma.dev"
  externalCertConfiguration:
    secrets:
      externalCertSvcSecret:
        manage: true
  externalServicesMock:
    auditlog:
      applyMockConfiguration: true
    enabled: true
    oauthSecret:
      manage: true
  http:
    client:
      skipSSLValidation: true
  ingress:
    domainName: "local.kyma.dev"
    tlsCrt: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZvVENDQTRtZ0F3SUJBZ0lVZTl2d0N3aVhDTDdtRURhZ2VaN0tZT3VZTHhVd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1lERUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WQkFvTQpHRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpERVpNQmNHQTFVRUF3d1FLaTVzYjJOaGJDNXJlVzFoCkxtUmxkakFlRncweU1qQXpNRFF4TVRBd05UWmFGdzB6TWpBek1ERXhNVEF3TlRaYU1HQXhDekFKQmdOVkJBWVQKQWtGVk1STXdFUVlEVlFRSURBcFRiMjFsTFZOMFlYUmxNU0V3SHdZRFZRUUtEQmhKYm5SbGNtNWxkQ0JYYVdSbgphWFJ6SUZCMGVTQk1kR1F4R1RBWEJnTlZCQU1NRUNvdWJHOWpZV3d1YTNsdFlTNWtaWFl3Z2dJaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUUN3SEZ0VnJaQlR2N3Y0RXZvakhDYStVcUxWajZLdzMzRGgKWU1xaVJtdVVPSTBLVWN6YmNuZUJVV1RzSUR5L29Sd2djNDVXclBOdkd1M0ROcE9hdVJkcU9VOWlBUzV5blhjUgpDa0duY0JpS1VJZTlFcHk0eEQ1ckVTSG9vUjRnQWM0L1FMazZybDRkdExZdS9TUEtySmxFL3hyc0F2VWNkZHovCkg0SDU3N2pFUlJTR0M1N2tnNVBpVlFtbS9pZnpESFZYYk16cGtsSllEd01NRFJiZHpaaFJYUmw4SDV2aE9BQk0KZkxKdFl6eHNQTWtISHJRYWwrOEtWcm1xTWFFZTRkV2FaWG02alB4dXlJRTg0RWE2dDlFdCtNcUIvUG8wS0xDeQo2VEREMmtkUjdwWkF1Y2JZeDFNK0gvTXkyNDVlbUovSnNiQ3h4UzI5KzRGZ05sa3pZWlFmUkF2eWVPUXU0OXZVCm1CQlJLMk5LbFl3dllvdkdUWUdKRU9aSWJwUkY4VFc2RVJKUjBjdjFtN3lvWHVqZHlFSEFBREwzN3B5Rm5QeVgKZUJLanNhQVhkV08wV3ppOWNqeTBmNjROMlcwbU93Y2lCRkVrTDM3aXk5NTdndXVwM1EvUVphV081UzkxN0F0Qgo1MFgzRnFmdU13cDVCYWU3cjFhaElDU045ME5FMkVQM2VRaExnRUo3dE1JdW00dWI5eGpmYXBmRkx5aG5IRG5tCjVxUkxXOEliREthZDh5b2dKbFQ0RUZ4MUhmK25qaU1PU1VqNjFsZVdWbXVRQWUzSzE3eHFmR0ZCY2RpRDJFLzkKN0Z0TlhHK0oxZ1Z0MTZQajhGa1R3R09NT3lCMGtoazBwQVlTTXpXNk9rME0vY1Z2OHVkdHIvaE9LZ0NuOXE2aQpQQTc1Y0tlYWNRSURBUUFCbzFNd1VUQWRCZ05WSFE0RUZnUVVYMkdLb0wzQnE0NEFUMXBmb1FmM1RqM0FrT2t3Ckh3WURWUjBqQkJnd0ZvQVVYMkdLb0wzQnE0NEFUMXBmb1FmM1RqM0FrT2t3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQWdFQUVFc0QyVWExbzhTRnNHMVZGZDJGMEdxOG5pZW5Qa3FxeVVvegpzcCtzVEp3WEl1N0RYOXV6TWpQSUVrb1l6N0RWbkE2VWdpelZSYUJQNFladE8ySnRhNzAxcFdMQ1N4VTRjT2o1CjE0NWExaGRjbjZib3dPTUZiWkUzL0tMVXoySzNlK3ovb2lGOTJ0d0UyYkdlamdXRUpUWVNLZjJQUGV5RVlWWXoKU1V0amd2YnFud0R4UVpROXN4dms0ZXZFNjhGYzFOMVJ5eE02aVdEemdqdmpuUzNtSmVPZ21US0J0VGJjUzFpMwpEb2F4WUREekdDOGlhcitxUUtDQ3B5bnU3d3lDQ2hNNzhwOFBUR3hweVRVSFpiQlJjRTBUdzRYYUt2anVqUTg3CjBYaENtc2MvbHBQV0hCMlhqZkhUVWlWeUs5NG01Ujk5K0cvbm4xMlA3Y3FxWENiU3N3SmxlSlRPeFJTR1hSaDQKUU1ySXlUcTFnKzd5VG1BeFlPNTVuaitIVnY1TklWSjNIejVEaEZOWlI3YU1ITUtUeHpvdVQxejc3dEpObUoySwpOMUNpOWJ5S0ljSHkvR1dTTTI2V01md0RLZUswM0dkNThtQmQreUVaUTZOZFFxcUM2aFZDSHpSWGxUMlJVNHJWCitid2dwTGt2VnZnRXYvajdETHdsaWZsSGFPYnRaVFVrMmZTTXhMNUNDbDR4U212eEQvQ1ZpUmdSWmxuQVk1U0UKa2RiRVJxSVpyaHJsQVVsM3VodEs2VUdjNkM2eWNoQ0w2bnJMQTZXN250UG9DY1hOLzUzdiswZTZlWFBHck5TKwpaUXM0Ui9DMnhoVzZGMWdwVzNndndkMmZzSW9mQTRYSDIwdElkblYzMzdMNTBhbm1NZFRKbHdYaHZ6QkV3cktiCnZxSUt5SHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
    tlsKey: "LS0tLS1CRUdJTiBFTkNSWVBURUQgUFJJVkFURSBLRVktLS0tLQpNSUlKbkRCT0Jna3Foa2lHOXcwQkJRMHdRVEFwQmdrcWhraUc5dzBCQlF3d0hBUUlLa0xmWDU3aWtxNENBZ2dBCk1Bd0dDQ3FHU0liM0RRSUpCUUF3RkFZSUtvWklodmNOQXdjRUNCSUxId3N2b3RYeEJJSUpTQy9yY1VRRGVjZHgKOC8rMEFUQUZKVnc4Vnh4d3hCdU8yU3dQUkl3QmhuNTdLNDB3UWRIbUhxdkhsdWxhTGNLQjdnekxGRVhlSnF0VgpQNnFjUWFUMmp0NlZhL0xGb2d5eDdrdjF6UVZscnB5QXNzQWhFSmdyUlRNcVczdDdhSHNZZUhzYjRHdFoxQXJmCmhmS0hLMVc5MGlhWG5JY2d5b0FRNHkzK2tuODU3aklnQVVIVDJEOCs5eDZqMTFjT0pGMEhIaTRWYlNQY1dPalkKNWgxZzRoaEN3QVo3c2lkSFVvK3FMSFkvd1p3QWhVRGF1RkZoY0p2RnNUcndoNVhCYkJjR01sWndsK0Nka0RrbwpMTVF6S0FQUTdxMzBudkFWcElWMVpRMTNWdDZob2NxMEVsaWNEOGVHcWhzZ1pySEZXKzZ5UW9RdU5YU3p6bFJlCmtHMU05bFVENGppNmIvZW9tMWZKMU0yRnErN0pzdWk5R1JIMEVPWUdKaVA4cDc1WW5pRVJFQk5pcGdKWENnTVoKckdHWkNSaDFGYSswWGNZclM2dHVhYmNuQ0ppRzdrVWp4STdqSnpmN0QzZCtuWFdIWmVRSjJUbnhJbEtLOGo5UgpFTnlyT3h4L3V4aG1OdzQ3TDlNUW1EK0Jsa1dMQXNObkIxZm5FQ2Q2TG9QUXRaN0Z0azJ5dlRuM3NCSmJxWWFvCkhPT05vTUVWSEkvVjhFU25NUnNneEt6SjFRWXpEQTQweEFJZldkMEZJaThMc2hEc1F2NWxjM2dvaERRcUF2YVUKUk5pQTFZZWZ2YnVBT2RMWk1VQjR0NDYzWUozdXNtVG1hSG13M3JCeVh2TmNtWWFDNjI1WndJVVVCUHd3NlBJeApqU3BKeC9VOFpxdE9vS0UzeHRxdlJYM1M4cDlPMUpDZjZDblVLM2lKUWhwNnlwdGpqNTlReS8zMno0Q0VMWWpwCmpsMVE1cy85TTlmeThoUkRuMXRjWktEYWFKMTV6ZWcvbjBLb3hsQ3Q3OHZBQVVXcWZsWFAzeEdwWXlIK2ZEWXcKUFVSUU9wTEJtME9VbC9aSnkxNklVUmVpRitFSG45TXd5RVUwRVM4R3dpd1NlR2lwRFRBL2U4NTBOMUowV1lnbwpXV0ljNkNSSVpaQ2dVM01CN24xZ1RucXFsTkMrWStPb1BJMkJkL3VXRWtBWGNmM0hYZ1RKRFYzZVphZ2l5TENJCjRaSFdYMEppSFRpTmRiODgwM2owbDMwU1FlQlJESjZPMUlRNmxJdk4wS2NrWnlQajJuejJPa0wzOUVRUnZ6SVMKaTdGaXhYaU5rVWVRbk5jNWg2bzZkd0paVTRmT1R1Zlc3MGxkT1ZheXJ2WWIxamprNVl4N3I3V2Z3ZmtUN3VEeApPc05GNzlEZWdnakZBOTNSdEVCRTJSVytUYkF3Z3ROSUhXRzh3SUJwN3F5amJLVlEwVGtkbWZJZ1ljM2xsSDdHCk0zNkRwWi9VT3VEcGVLajd6KzBIcGZiZW1SdGk0SElCSDVRTjNoa2xDWkhianRmd2RuQ1ljZlNYR2RqditTZGoKUnhFbFQ3Y29aNTlYU3FFUnVEVXBobG1SRk1haG1xTkRpZFV1bVptcFpnL0IzM3djVThRMllHYTRRSW8vWnlBbgozRmlHUFgvZXdoQW5EM2FwK3FrcEs0cXl5R1E4bjJIcVJ3S25ONjZ3TW55UFAxOEUxd1ZPNjJob2NRODRyM0Y1CmFhS0M3ZzFBNFlIeGNMenRLVDNibDVGY25TK1lHZDREaHVxeXZ5L1NTZ2NBWE9jZEdJVVJSTDhHbEl6NUlvZm0KUXFFeW83QXgycVVvaXh4SmJ4MWo4NVBtb2xCandDWlNCVjBzQzgrWldvZ2dYMktMV1JpMGw3YWxEU1VqZ3B2bwpnaWt0aG02cWMvam5QRnMwQlVCenk4eDZlaFJoWFJoTTdhNFRVQnkrZnMxY3g5aU9QVGJDdXljOGxGSFllVUhuCkU1TytORmZQTUxPTjNZODdxMUhIZ2lrM3NOMHNhUm5JU0FPYktZaHVSenNnOGNqdFR0bTJGR1Y3NThyMGorZ20KOEZ2S0tjWTRUc0thamRWTG95WVdWN2VhSHNNRDBMS0dnZXgwdjJqU0JnY3NFbzE1THVTRlozbUxBaHByYU5lNQpHYUtXS09kbHg2Kys3YXkzK0ZZam9PUzNpdVd1bnQyTjE2dkd0U0Q3NXdUUGhjM3hUNDEzQ2ZpRDR2aitNVWVVCkdmajViakplS09ObTZpa2U3Q2REcEN1RVU1OHVHMWhDUFlxeUduRW11Sk9oV0gyRnpqNFlkVEpDbE9nbW5RcGoKNWhuN25yQjdoeVdtc2NNTVJYUm5NUFdJYUVvUlowRmEvcVFOeTFmVm9xelA3RUwwQmtzQ0ZGaEJubURlMnA3dApSRjduaGZBV3JJMjlyeno0UlA2YjZ1NFZXdHZmSnFJVS95WHpMZHNnbUJZamlGc3BCMkluYm9EWWVQSzUzbXFWCjAzUWl1UHNwUVh6L1o2czRqUythZWxGTkFucW0ybmVvcFB0QnkxWGgrZXczeWt1ZGF0ck1aUzI5WmlMNUFxQTkKWS9jcXhzc1dmR3RXSDg4NWVUalBwWTJONnN3Nk5OVTJDSzZML2UrNjg4M2s5MWxHc3ZpR0gwTVh2bk5pZEF0MwowWUZkSTJZVXdidWo0dzlnUno4b2RueUh6NDZtbnRWdlpUOXBuTGtpWm1JbWxtM1ZySXdSYnI0SzhKMHVqL1diCk1RcVdJdEFGMlgxYUZuNmcxYVExUXVQRzZNbGI0b0N3bUdFMlg4N1l2eU8vTzlqclRnam5CbWhzbjVSQzY4Mk4KaVg5VVlFQzRRL3NLY0R5NGhESVlLSmo0ODA0M3pGc2RuNDdWYTNObGk2TlpVcENCaERZNEtGb3JUSk9QL1E2TQpscmVmYWdVUUZvWHRzOFM0LzRzd2FkVklnL3Z6enIvWWNzNmVnTitRMjJ2MThsNjZCaVBPZ0dNajdJSDZIOWpFCnk2ck14M1VqT2xwZHUzTWJEZmRFV3hzMFNsNGZyTVduTjh1L3JnTnlBby9WL0FCWWJxT002T0srWUdPTG1RY0UKdVBRV3habnU4TWozeGJ5ZFJIcTNzSWF6blJZMDRkR2JZS0YwejNGZ25qUlpKNno0U3JUNysvWG5ZRnRZVGZodwpFLzFvU21kbEZYQ2F4VGI3SjJTSG5DQk9uZnkrUlI1R2ZTWmQyRU5xemtENmJKUXNOSWZQd2xnbElUZlVGb1RlCjQ4ZlA2TkYwQVhSUnpqdWRMeThENFhXRkFNNVE2WEZJdHdteUZIVDM1Y3libHNvYlVwV0RWeXZKRzR2NHdybmQKSlc4QmEyb1kzeTFuK3o0a1gxUW1SRWNiaDJnSlRPRGNmcWU5UFpyL2xKWmQ2YTd0cGJnODArU29tQVNvMlNBQwpYa3dBSGF5bEdLNVYxQ29zZTZmVlBFT0VtLy9xazNsNHNqbjZHSk1oNW1FN2dLU1dnbFozZlkxTWpSRWZOUW5IClNGRHJpVGMwVEgrTFhDZENoc3dnWWlpRFp1cU5vTXZNQ0c3Y1ZtdDRwUlBQYVdCUVpLeGRGbmRNSGV1aUQ1TmEKemF6ZFJucmZQZU02OG1UMXU2dnZzMUMrT2JXTkZpWmpXL29hVjVoUkJHWkpxUFhHS2Z3VFpJTTB4Qk1uemJqYwpXMTBzRWtrOSs2RG5GOEQ0SzRyV3ZtYUl6YXNBb0YrR1N6U0E5MytUWlNudEhpN3dLQW1RdjVkNkp1emdRYzNLCm1ENGVKVit2QzhMTnAvWGsya1J1Z1hPMEIrY1pqMFFNa0Z2TmgrSkV2ZG1tVnpHb1JCcTBHait6amZJK2tYWEYKMzd6bUdzZWVRZVNOQVZMZVc0QVFTL3EvdGhwajlmamJJbGhrTU1IRkd1bHdqR3RHdmg4Y29Wc2E2ekd0R0FyTQp6K1Mwcmp4K1dIYmN2OG5ySVhqS3NJa3RiN3ZPSlN3VnZiUUk5cGVBckR0WTJkOEdYbkJlbmxMNFcxV2E0MHVlCng3bFNmeElPWDBSTFZwa2Z1UjloVlVna25JZUlzNjlDTE5ZL0xzYTBjQmVrbTFHRUdmemo1dXVFZUh5RmFnS2wKQ241blpLc2R3azk1QVFVZDN2UzhUQ0loL3VPbkllSE9PQzYxd1MyV1p5amk3VmRxYzIwaUlUWElOSHNZTXdjSwp2SFp1cWhvYTJDK2FpY3pOcHFPR0hRPT0KLS0tLS1FTkQgRU5DUllQVEVEIFBSSVZBVEUgS0VZLS0tLS0K"
  isLocalEnv: true
  oathkeeper:
    mutators:
      authenticationMappingServices:
        subscriber:
          authenticator:
            enabled: true
        tenant-fetcher:
          authenticator:
            enabled: true
  ordAggregator:
    http:
      client:
        skipSSLValidation: true
  systemFetcher:
    enabled: true
    http:
      client:
        skipSSLValidation: true
    systemToTemplateMappings: '[{"Name": "temp1", "SourceKey": ["prop"], "SourceValue": ["val1"] }, {"Name": "temp2", "SourceKey": ["prop"], "SourceValue": ["val2"] }]'
    systemsAPIEndpoint: http://compass-external-services-mock.compass-system.svc.cluster.local:8080/systemfetcher/systems
    systemsAPIFilterCriteria: "no"
    systemsAPIFilterTenantCriteriaPattern: "tenant=%s"
  tenantFetchers:
    account-fetcher:
      accountRegion: "local"
      dbPool:
        maxIdleConnections: "1"
        maxOpenConnections: "1"
      enabled: true
      endpoints:
        accountCreated: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/tenant-fetcher/global-account-create"
        accountDeleted: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/tenant-fetcher/global-account-delete"
        accountUpdated: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/tenant-fetcher/global-account-update"
      fieldMapping:
        customerIdField: "customerId"
        detailsField: "eventData"
        discriminatorField: ""
        discriminatorValue: ""
        entityTypeField: "type"
        idField: "guid"
        nameField: "displayName"
        tenantEventsField: "events"
        totalPagesField: "totalPages"
        totalResultsField: "totalResults"
      kubernetes:
        configMapNamespace: "compass-system"
        pollInterval: "2s"
        pollTimeout: "1m"
        timeout: "2m"
      manageSecrets: true
      oauth:
        client: "client_id"
        secret: "client_secret"
        tokenPath: "/secured/oauth/token"
        tokenURL: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080"
      providerName: "external-svc-mock"
      query:
        pageSize: "1000"
        startPage: "1"
      queryMapping:
        pageNumField: "page"
        pageSizeField: "resultsPerPage"
        timestampField: "ts"
      schedule: "0 23 * * *"
      secret:
        clientIdKey: "client-id"
        clientSecretKey: "client-secret"
        name: "compass-account-fetcher-secret"
        oauthMode: "standard"
        oauthUrlKey: "url"
      shouldSyncSubaccounts: false
    subaccount-fetcher:
      accountRegion: "local"
      dbPool:
        maxIdleConnections: "1"
        maxOpenConnections: "1"
      enabled: true
      endpoints:
        subaccountCreated: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/tenant-fetcher/subaccount-create"
        subaccountDeleted: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/tenant-fetcher/subaccount-delete"
        subaccountMoved: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/tenant-fetcher/subaccount-move"
        subaccountUpdated: "http://compass-external-services-mock.compass-system.svc.cluster.local:8080/tenant-fetcher/subaccount-update"
      fieldMapping:
        customerIdField: "customerId"
        detailsField: "eventData"
        discriminatorField: ""
        discriminatorValue: ""
        entityTypeField: "type"
        idField: "guid"
        nameField: "displayName"
        tenantEventsField: "events"
        totalPagesField: "totalPages"
        totalResultsField: "totalResults"
      kubernetes:
        configMapNamespace: "compass-system"
        pollInterval: "2s"
        pollTimeout: "1m"
        timeout: "2m"
      manageSecrets: true
      oauth:
        client: "client_id"
        secret: "client_secret"
        tokenPath: "/cert/token"
        tokenURL: '{{ printf "https://%s.%s" .Values.global.externalServicesMock.certSecuredHost .Values.global.ingress.domainName }}'
      providerName: "subaccount-fetcher"
      query:
        pageSize: "1000"
        startPage: "1"
      queryMapping:
        pageNumField: "page"
        pageSizeField: "resultsPerPage"
        timestampField: "ts"
      schedule: "0 23 * * *"
      secret:
        clientCertKey: "client-cert"
        clientIdKey: "client-id"
        clientKeyKey: "client-key"
        clientSecretKey: "client-secret"
        name: "compass-subaccount-fetcher-secret"
        oauthMode: "oauth-mtls"
        oauthUrlKey: "url"
      shouldSyncSubaccounts: true
      subaccountRegions: "test"
  tests:
    basicCredentials:
      manage: true
    http:
      client:
        skipSSLValidation:
          director: true
          ordService: true
    ordService:
      subscriptionOauthSecret:
        manage: true
operations-controller:
  http:
    client:
      skipSSLValidation: true
system-broker:
  http:
    client:
      skipSSLValidation: true